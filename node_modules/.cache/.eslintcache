[{"/Users/h-yosiok/Web_Application_Development/animeSubstantial/src/index.js":"1","/Users/h-yosiok/Web_Application_Development/animeSubstantial/src/script/App.js":"2","/Users/h-yosiok/Web_Application_Development/animeSubstantial/src/script/reportWebVitals.js":"3","/Users/h-yosiok/Web_Application_Development/animeSubstantial/src/script/DrawEye.js":"4"},{"size":555,"mtime":1656806980476,"results":"5","hashOfConfig":"6"},{"size":247,"mtime":1657080920040,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1656804125471,"results":"8","hashOfConfig":"6"},{"size":1669,"mtime":1657080985841,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ro7qst",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/Users/h-yosiok/Web_Application_Development/animeSubstantial/src/index.js",[],[],"/Users/h-yosiok/Web_Application_Development/animeSubstantial/src/script/App.js",["24"],[],"import logo from '../figure/logo.svg';\nimport '../style/App.css';\nimport DrawEye from './DrawEye';\n\nfunction App(props) {\n  return (\n    <div>\n      <DrawEye eyeside=\"right\"/>\n      <DrawEye eyeside=\"left\"/>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/h-yosiok/Web_Application_Development/animeSubstantial/src/script/reportWebVitals.js",[],[],"/Users/h-yosiok/Web_Application_Development/animeSubstantial/src/script/DrawEye.js",["25","26","27","28"],[],"import EyeClosed from \"../figure/eye-closed.png\";\nimport EyeMiddle from \"../figure/eye-middle.png\";\nimport EyeOpen from \"../figure/eye-open.png\";\nimport React, { useState, useEffect } from \"react\";\nimport { render } from \"@testing-library/react\";\nimport '../style/App.css';\n\n\nfunction DrawEye(props){\n\n  const getWindowDimensions = () => {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n      width,\n      height,\n    };\n  };\n\n  const [eye_mode,set_eye_mode] = useState(0);\n\n  const getImage = (i) => {\n    let image;\n\n    switch (i) {\n      case 1:\n        image = EyeMiddle;\n        break;\n      case 2:\n        image = EyeClosed;\n        break;\n        case 3:\n        image = EyeMiddle;\n        break;\n      default:\n        image = EyeOpen;\n        break;\n    }\n    return image;\n  };\n\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions(),\n  );\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      set_eye_mode((eye_mode+1)%30);\n    },50)\n    return () => clearInterval(interval);\n  },[eye_mode]);\n\n  useEffect(() => {\n    const onResize = () => {\n      setWindowDimensions(getWindowDimensions());\n    };\n    window.addEventListener(\"resize\", onResize);\n    return () => window.removeEventListener(\"resize\", onResize);\n  }, []);\n\n    if(props.eyeside===\"right\"){    return(\n        <img src={getImage(eye_mode)} width={windowDimensions.width / 2} />\n    );\n    }else{\n      return(\n        <img src={getImage(eye_mode)} className=\"reverse\" width={windowDimensions.width / 2} />\n    );\n    }\n}\n\nfunction toBoolean(data){\n  return data.toLowerCase() === 'true';\n}\n\nexport default DrawEye;\n",{"ruleId":"29","severity":1,"message":"30","line":1,"column":8,"nodeType":"31","messageId":"32","endLine":1,"endColumn":12},{"ruleId":"29","severity":1,"message":"33","line":5,"column":10,"nodeType":"31","messageId":"32","endLine":5,"endColumn":16},{"ruleId":"34","severity":1,"message":"35","line":61,"column":9,"nodeType":"36","endLine":61,"endColumn":76},{"ruleId":"34","severity":1,"message":"35","line":65,"column":9,"nodeType":"36","endLine":65,"endColumn":96},{"ruleId":"29","severity":1,"message":"37","line":70,"column":10,"nodeType":"31","messageId":"32","endLine":70,"endColumn":19},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'render' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'toBoolean' is defined but never used."]